name: Rust Docs to Wiki

# This workflow extracts documentation from Rust source code and updates the GitHub wiki.
# 
# IMPORTANT: This workflow requires a personal access token (PAT) with 'workflow' scope
# to push changes to the wiki repository. The default GITHUB_TOKEN doesn't have wiki permissions.
# 
# Setup instructions:
# 1. Create a personal access token with 'workflow' scope at:
#    https://github.com/settings/tokens
# 2. Add the token as a repository secret named 'WIKI_TOKEN' at:
#    https://github.com/YOUR_USERNAME/YOUR_REPO/settings/secrets/actions

on:
  push:
    branches: [ main, master ]
    paths:
      - '**/*.rs'
      - 'Cargo.toml'
      - '.github/workflows/rust-docs-to-wiki.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  extract-docs-and-update-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Generate documentation in Markdown
        run: |
          # Create a directory for the wiki content
          mkdir -p wiki-content
          
          # Get the crate name from Cargo.toml
          CRATE_NAME=$(grep -E "^name\s*=\s*" Cargo.toml | head -1 | cut -d'"' -f2 || echo ${GITHUB_REPOSITORY#*/})
          
          # Generate markdown documentation using rustdoc
          for file in $(find src -name "*.rs"); do
            # Create output directory for this file
            dir_name=$(dirname "$file")
            mkdir -p "wiki-content/$dir_name"
            
            # Extract file name without extension
            base_name=$(basename "$file" .rs)
            
            # Generate markdown documentation for this file
            RUSTDOCFLAGS="--markdown-no-toc" cargo rustdoc --lib -- -w markdown "$file" -o "wiki-content/$dir_name"
            
            # If markdown file exists, move it to appropriate location
            if [ -f "wiki-content/$dir_name/$base_name.md" ]; then
              # For mod.rs files, move to directory name
              if [ "$base_name" = "mod" ]; then
                dir_parent=$(dirname "$dir_name")
                dir_base=$(basename "$dir_name")
                mkdir -p "wiki-content/$dir_parent"
                mv "wiki-content/$dir_name/$base_name.md" "wiki-content/$dir_parent/$dir_base.md"
              else
                # Fix links in the file
                sed -i 's/\.\.\/\.\.\//\//g' "wiki-content/$dir_name/$base_name.md"
              fi
            fi
          done
          
          # Create Home.md
          echo "# ${GITHUB_REPOSITORY#*/} Documentation" > wiki-content/Home.md
          echo "" >> wiki-content/Home.md
          echo "This wiki contains automatically generated documentation from the Rust codebase." >> wiki-content/Home.md
          echo "" >> wiki-content/Home.md
          echo "## Modules" >> wiki-content/Home.md
          
          # Add links to modules excluding Home.md
          find wiki-content -type f -name "*.md" ! -name "Home.md" | sort | while read -r file; do
            rel_file=${file#wiki-content/}
            module_name=$(basename "$file" .md)
            echo "* [$module_name]($rel_file)" >> wiki-content/Home.md
          done

      - name: Setup Git for Wiki
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Clone Wiki Repository
        run: |
          # Use PAT for wiki push (needs to be set in repository secrets)
          git clone https://${{ secrets.WIKI_TOKEN }}@github.com/${{ github.repository }}.wiki.git wiki-repo
          
          # Copy new content to wiki repository
          cp -r wiki-content/* wiki-repo/
          
          cd wiki-repo
          git add .
          
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update documentation from Rust code (${GITHUB_SHA:0:7})"
            git push
          fi

      - name: Upload Markdown as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wiki-docs
          path: wiki-content/
